export declare const checkRowIsValid: (yIndex: number, arr2d: number[][]) => boolean;
export declare const checkColumnIsValid: (xIndex: number, arr2d: number[][]) => boolean;
export declare const check3by3BoxIsValid: (xIndex: number, yIndex: number, arr2d: number[][]) => boolean;
export type CallStackStep = {
    onFunctionExecutingInCallStack: (x: number, y: number, arr2d: number[][]) => void;
    delayBetweenEachStepInCallStackInMillisecs: number;
    onPuzzleSolutionFound?: () => void;
};
/**
 * Solves a proper sudoku puzzle (9x9 with a minimum of 17 clues) with a recursive backtracking algorithm
 * @param puzzleInput - a 9x9 2d array of numbers where -1 represents an empty cell
 * @returns a 9x9 2d array of numbers representing the solved sudoku puzzle
 */
export declare const solveProperSudokuAsync: (puzzleInput: number[][] | number[], callStackStep?: CallStackStep) => Promise<number[][]>;
